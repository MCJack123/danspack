local a,b,c,d,e,f,g,h,i,j=bit32.band,bit32.rshift,bit32.lshift,bit32.bor,math.frexp,math.max,math.floor,table.sort,table.concat,string.char;local function k(l)local m,n=e(l)return n-1 end;local function o(l)return l==0 and 0 or 2^(l-1)end;local p,q,r={R=9},{R=5},{16,17,18}for s=0,143 do p[s+1]={s,2}end;for s=144,255 do p[s+1]={s,1}end;for s=256,279 do p[s+1]={s,4}end;for s=280,287 do p[s+1]={s,2}end;for s=0,31 do q[s+1]={s,1}end;for s=0,7 do r[#r+1],r[#r+2]=(8-s)%8,8+s end;local function t(u)local v,w,x=0,0,1;local function y(l)if not l then l=w%8 end;if l<=0 then return 0 end;while w<l do assert(x<=#u)x,w,v=x+1,w+8,c(v,8)+u:byte(x)end;local z=a(b(v,w-l),2^l-1)w=w-l;return z end;return y end;local function A(B)local C,D=B.R,2^B.R;local E,F,G,H,I=0,D<16 and 3 or 0.625*D+3,{R=C},{},{}if C<0 then return G end;for s=1,#B do local J=B[s]H[J[1]]=J[2]for m=1,J[2]do while I[E]do E=(E+1)%D end;E,I[E]=(E+F)%D,J[1]end end;for E=0,D-1 do local K=I[E]local L={s=K,n=C-k(H[K])}L.X,G[E],H[K]=c(H[K],L.n)-D,L,1+H[K]end;return G end;local function M(y,N,G,O)local E,P,s,z=y(G.R),O and y(O.R),1,{}while s<=N do local L=G[E]local K=L.s;if K==256 then return z elseif K>256 then local Q=K-257;local R=f(g(Q/4)-1,0)if R>0 then Q=2+d(y(R),c(a(Q,3)+4,R))else Q=Q+2 end;local S=O[P]local T=S.s;R=f(g(T/2)-1,0)if R>0 then T=1+d(y(R),c(a(T,1)+2,R))else T=T+1 end;for U=0,Q do z[s+U]=z[s+U-T]end;s,P=s+Q+1,S.X+y(S.n)elseif not O and K>15 then local V;if K==16 then K,V=z[s-1],3+y(2)elseif K==17 then K,V=0,3+y(3)else K,V=0,11+y(7)end;for U=0,V-1 do z[s+U]=K end;s=s+V else z[s],s=K,s+1 end;E=L.X+y(L.n)end;return z end;local function W(X)print("inflate dans",#X)local Y,z=t(X),""repeat local Z,_=Y(1)==1,Y(2)if _==0 then Y()local a0=Y(16)assert(bit32.bxor(Y(16),a0)==0xFFFF,"invalid chunk")for m=1,a0 do z=z..j(Y(8))end elseif _==1 or _==2 then local B,a1;if _==1 then B,a1=p,q else local a2,a3,a4,a5=Y(5)+257,Y(5)+1,Y(4)+4,{R=0}for s=1,a4 do local a6=o(Y(3))a5.R,a5[s]=a5.R+a6,{r[s],a6}end;a5.R=k(a5.R)h(a5,function(a7,a8)return a7[1]<a8[1]end)local a9=M(Y,a2+a3,A(a5))B,a1={R=0},{R=0}for s=1,a2 do B[s]={s-1,o(a9[s])}end;for s=1,a3 do a1[s]={s-1,o(a9[s+a2])}end;for s=1,a2 do B.R=B.R+B[s][2]end;for s=1,a3 do a1.R=a1.R+a1[s][2]end;B.R,a1.R=k(B.R),k(a1.R)end;local aa=M(Y,1e10,A(B),A(a1))for s=1,#aa do aa[s]=j(aa[s])end;z=z..i(aa)elseif _==3 then local ab={}while true do local V=Y(9)if V==511 then break elseif V>=256 then V=V-253;local ac=Y(15)for m=1,V do ab[#ab+1]=ab[#ab-ac]end else ab[#ab+1]=string.char(V)end end;z=z..table.concat(ab)else error("invalid chunk")end until Z;return z end;return W
